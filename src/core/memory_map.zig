pub const INTERRUPT_VECTOR_START = 0x0000_0000;
pub const INTERRUPT_VECTOR_END = 0x0000_03FF;
pub const INTERRUPT_VECTOR_SIZE = INTERRUPT_VECTOR_END - INTERRUPT_VECTOR_START + 1;
pub const INT_VECTOR_ENTRY_SIZE = 1024;

pub const SYSCALL_VECTOR_START = 0x0000_0400;
pub const SYSCALL_VECTOR_END = 0x0000_7FFF;
pub const SYSCALL_VECTOR_SIZE = SYSCALL_VECTOR_END - SYSCALL_VECTOR_START + 1;
pub const SYSCALL_VECTOR_ENTRY_SIZE = 1024;

pub const INTERRUPT_ROUTINE_START = 0x0000_1000;
pub const INTERRUPT_ROUTINE_END = 0x0004_0FFF;
pub const INTERRUPT_ROUTINE_SIZE = INTERRUPT_ROUTINE_END - INTERRUPT_ROUTINE_START + 1; // 256KB

pub const SYSCALL_ROUTINE_START = 0x0004_1000;
pub const SYSCALL_ROUTINE_END = 0x0008_0FFF;
pub const SYSCALL_ROUTINE_SIZE = SYSCALL_ROUTINE_END - SYSCALL_ROUTINE_START + 1; // 256KB

pub const BIOS_SECTOR_START = 0x0000_1000;
pub const BIOS_SECTOR_END = 0x0000_1FFF;
pub const BIOS_SECTOR_SIZE = BIOS_SECTOR_END - BIOS_SECTOR_START + 1; // 4KB

// 16MB Instruction Memory
pub const INSTR_MEM_SECTOR_START = 0x1000_0000;
pub const INSTR_MEM_SECTOR_END = 0x1FFF_FFFF;
pub const INSTR_MEM_SECTOR_SIZE = INSTR_MEM_SECTOR_END - INSTR_MEM_SECTOR_START + 1; // 256MB

// 16MB Data Memory
pub const DATA_MEM_SECTOR_START = 0x2000_0000;
pub const DATA_MEM_SECTOR_END = 0x2FFF_FFFF;
pub const DATA_MEM_SECTOR_SIZE = DATA_MEM_SECTOR_END - DATA_MEM_SECTOR_START + 1; // 256MB

// MMIO, 0xFFFF_0000 ~ 0xFFFF_FFFF
pub const MMIO_START = 0xFFFF_0000;
pub const MMIO_END = 0xFFFF_FFFF;
pub const MMIODevice = enum(u32) {
    keyboard_input = 0xFFFF_0000,
    keyboard_status = 0xFFFF_0001,
    terminal_output = 0xFFFF_0002,
    terminal_status = 0xFFFF_0003,
    timer = 0xFFFF_0010,
};

pub fn is_valid_memory(addr: u32) bool {
    return (addr >= INTERRUPT_VECTOR_START and addr <= INTERRUPT_VECTOR_END) or
        (addr >= SYSCALL_VECTOR_START and addr <= SYSCALL_VECTOR_END) or
        (addr >= INTERRUPT_ROUTINE_START and addr <= INTERRUPT_ROUTINE_END) or
        (addr >= SYSCALL_ROUTINE_START and addr <= SYSCALL_ROUTINE_END) or
        (addr >= BIOS_SECTOR_START and addr <= BIOS_SECTOR_END) or
        (addr >= INSTR_MEM_SECTOR_START and addr <= INSTR_MEM_SECTOR_END) or
        (addr >= DATA_MEM_SECTOR_START and addr <= DATA_MEM_SECTOR_END) or
        (addr >= MMIO_START and addr <= MMIO_END);
}
